apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "django-todo.fullname" . }}
  labels:
    {{- include "django-todo.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "django-todo.selectorLabels" . | nindent 6 }}
  strategy:
    {{ toYaml .Values.updateStrategy | indent 4 }}
  template:
    metadata:
      labels:
        {{- include "django-todo.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "django-todo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: DB_HOST
              value: "{{ .Values.database.host }}"
            - name: DB_USER
              value: "{{ .Values.database.username }}"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "django-todo.fullname" . }}-db
                  key: dbPassword
            - name: DB_PORT
              value: "{{ .Values.database.port }}"
            - name: DB_NAME
              value: "{{ .Values.database.dbName }}"
            - name: STATICFILES_ROOT
              value: /staticfiles
          volumeMounts:
            - mountPath: /staticfiles
              name: staticfiles
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
        - name: nginx
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-config
              subPath: nginx.conf
            - mountPath: /staticfiles
              name: staticfiles
              readOnly: true
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
      volumes:
        - name: staticfiles
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: {{ include "django-todo.fullname" . }}-nginx
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
